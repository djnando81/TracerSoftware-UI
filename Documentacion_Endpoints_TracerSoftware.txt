======= DOCUMENTACIÃ“N DE ENDPOINTS - TRACERSOFTWARE.API =======
Generado: 2025-08-15 14:23:23

=============================================================
ðŸ“˜ AdminController â€“ /api/admin
=============================================================
Gestiona admins del sistema.
ðŸ”¹ GET /api/admin/secret
    Consulta todos los admins.


=============================================================
ðŸ“˜ AlmacenesController â€“ /api/almacenes
=============================================================
Gestiona almacenes del sistema.
ðŸ”¹ GET /api/almacenes
    Consulta todos los almacenes.
    â€¢ Usa DTO: List<AlmacenDTO

ðŸ”¹ GET /api/almacenes/{id}
    Consulta almacenes por el ID.
    â€¢ Usa DTO: AlmacenDTO
      la compone:
        - Id : int
        - Nombre : string
        - Tipo : string
        - Descripcion : string
        - Activo : bool

ðŸ”¹ POST /api/almacenes
    Crea un nuevo almacenes.
    â€¢ Usa DTO: AlmacenDTO
      la compone:
        - Id : int
        - Nombre : string
        - Tipo : string
        - Descripcion : string
        - Activo : bool

ðŸ”¹ PUT /api/almacenes/{id}
    Actualiza almacenes por el ID.
    â€¢ Usa DTO: AlmacenDTO
      la compone:
        - Id : int
        - Nombre : string
        - Tipo : string
        - Descripcion : string
        - Activo : bool

ðŸ”¹ DELETE /api/almacenes/{id}
    Elimina almacenes por el ID.

ðŸ”¹ PATCH /api/almacenes/{id}/toggle-activo
    Actualiza parcialmente almacenes por el ID.


=============================================================
ðŸ“˜ ApiInfoController â€“ /api/apiinfo
=============================================================
Gestiona apiinfos del sistema.
ðŸ”¹ GET /api/apiinfo/versions
    Consulta todos los apiinfos.

ðŸ”¹ GET /api/apiinfo/current
    Consulta todos los apiinfos.

ðŸ”¹ GET /api/apiinfo/deprecated-example
    Consulta todos los apiinfos.

ðŸ”¹ GET /api/apiinfo/health
    Consulta todos los apiinfos.


=============================================================
ðŸ“˜ AuditoriaController â€“ /api/auditoria
=============================================================
Gestiona auditorias del sistema.
ðŸ”¹ GET /api/auditoria
    Consulta todos los auditorias.

ðŸ”¹ GET /api/auditoria/{id}
    Consulta auditoria por el ID.

ðŸ”¹ GET /api/auditoria/entidades
    Consulta todos los auditorias.

ðŸ”¹ GET /api/auditoria/usuarios
    Consulta todos los auditorias.


=============================================================
ðŸ“˜ AuthController â€“ /api/auth
=============================================================
Gestiona auths del sistema.
ðŸ”¹ POST /api/auth/login
    Crea un nuevo auth.
    â€¢ Usa DTO: LoginRequestDTO
      la compone:
        - Nombre : string
        - Password : string

ðŸ”¹ POST /api/auth/refresh
    Crea un nuevo auth.
    â€¢ Usa DTO: RefreshTokenRequestDTO
      la compone:
        - RefreshToken : string

ðŸ”¹ POST /api/auth/revoke
    Crea un nuevo auth.
    â€¢ Usa DTO: RefreshTokenRequestDTO
      la compone:
        - RefreshToken : string

ðŸ”¹ POST /api/auth/logout
    Crea un nuevo auth.


=============================================================
ðŸ“˜ BajasMateriaPrimaController â€“ /api/bajasmateriaprima
=============================================================
Gestiona bajasmateriaprimas del sistema.
ðŸ”¹ POST /api/bajasmateriaprima
    Crea un nuevo bajasmateriaprima.
    â€¢ Usa DTO: BajaMateriaPrimaDTO
      la compone:
        - Id : int
        - Fecha : DateTime
        - MateriaPrimaId : int
        - MateriaPrimaNombre : string
        - LoteInterno : string
        - AlmacenId : int
        - AlmacenNombre : string
        - Cantidad : decimal
        - Unidad : string
        - Motivo : string
        - UsuarioCreacion : string
        - Aprobada : bool

ðŸ”¹ GET /api/bajasmateriaprima
    Consulta todos los bajasmateriaprimas.
    â€¢ Usa DTO: List<BajaMateriaPrimaDTO

ðŸ”¹ GET /api/bajasmateriaprima/{id}
    Consulta bajasmateriaprima por el ID.
    â€¢ Usa DTO: BajaMateriaPrimaDTO
      la compone:
        - Id : int
        - Fecha : DateTime
        - MateriaPrimaId : int
        - MateriaPrimaNombre : string
        - LoteInterno : string
        - AlmacenId : int
        - AlmacenNombre : string
        - Cantidad : decimal
        - Unidad : string
        - Motivo : string
        - UsuarioCreacion : string
        - Aprobada : bool

ðŸ”¹ PUT /api/bajasmateriaprima/{id}/aprobar
    Actualiza bajasmateriaprima por el ID.

ðŸ”¹ GET /api/bajasmateriaprima/estadisticas
    Consulta todos los bajasmateriaprimas.


=============================================================
ðŸ“˜ BootstrapAuthController â€“ /api/bootstrapauth
=============================================================
Gestiona bootstrapauths del sistema.
ðŸ”¹ POST /api/bootstrapauth/bootstrap-login
    Crea un nuevo bootstrapauth.


=============================================================
ðŸ“˜ BootstrapController â€“ /api/bootstrap
=============================================================
Gestiona bootstraps del sistema.
ðŸ”¹ GET /api/bootstrap/ui
    Consulta todos los bootstraps.


=============================================================
ðŸ“˜ CacheController â€“ /api/cache
=============================================================
Gestiona caches del sistema.

=============================================================
ðŸ“˜ CategoriasMateriaPrimaController â€“ /api/categoriasmateriaprima
=============================================================
Gestiona categoriasmateriaprimas del sistema.
ðŸ”¹ GET /api/categoriasmateriaprima
    Consulta todos los categoriasmateriaprimas.
    â€¢ Usa DTO: List<CategoriaMateriaPrimaDTO

ðŸ”¹ GET /api/categoriasmateriaprima/{id}
    Consulta categoriasmateriaprima por el ID.
    â€¢ Usa DTO: CategoriaMateriaPrimaDTO
      la compone:
        - Id : int
        - Nombre : string
        - Activa : bool

ðŸ”¹ POST /api/categoriasmateriaprima
    Crea un nuevo categoriasmateriaprima.
    â€¢ Usa DTO: CategoriaMateriaPrimaCreateDTO
      la compone:
        - Nombre : string
        - Activa : bool

ðŸ”¹ PUT /api/categoriasmateriaprima/{id}
    Actualiza categoriasmateriaprima por el ID.
    â€¢ Usa DTO: CategoriaMateriaPrimaCreateDTO
      la compone:
        - Nombre : string
        - Activa : bool

ðŸ”¹ DELETE /api/categoriasmateriaprima/{id}
    Elimina categoriasmateriaprima por el ID.

ðŸ”¹ PATCH /api/categoriasmateriaprima/{id}/toggle-estado
    Actualiza parcialmente categoriasmateriaprima por el ID.


=============================================================
ðŸ“˜ CategoriasProductoTerminadoController â€“ /api/categoriasproductoterminado
=============================================================
Gestiona categoriasproductoterminados del sistema.
ðŸ”¹ GET /api/categoriasproductoterminado
    Consulta todos los categoriasproductoterminados.
    â€¢ Usa DTO: List<CategoriaProductoTerminadoDTO

ðŸ”¹ GET /api/categoriasproductoterminado/{id}
    Consulta categoriasproductoterminado por el ID.
    â€¢ Usa DTO: CategoriaProductoTerminadoDTO
      la compone:
        - Id : int
        - Nombre : string
        - Activo : bool

ðŸ”¹ POST /api/categoriasproductoterminado
    Crea un nuevo categoriasproductoterminado.
    â€¢ Usa DTO: CategoriaProductoTerminadoCreateDTO
      la compone:
        - Nombre : string
        - Activo : bool

ðŸ”¹ PUT /api/categoriasproductoterminado/{id}
    Actualiza categoriasproductoterminado por el ID.
    â€¢ Usa DTO: CategoriaProductoTerminadoCreateDTO
      la compone:
        - Nombre : string
        - Activo : bool

ðŸ”¹ DELETE /api/categoriasproductoterminado/{id}
    Elimina categoriasproductoterminado por el ID.


=============================================================
ðŸ“˜ ClientesController â€“ /api/clientes
=============================================================
Gestiona clientes del sistema.
ðŸ”¹ GET /api/clientes
    Consulta todos los clientes.
    â€¢ Usa DTO: List<ClienteDTO

ðŸ”¹ GET /api/clientes/{id}
    Consulta clientes por el ID.
    â€¢ Usa DTO: ClienteDTO
      la compone:
        - Id : int
        - RazonSocial : string
        - CUIT : string
        - Direccion : string
        - Email : string
        - Telefono : string
        - Activo : bool

ðŸ”¹ POST /api/clientes
    Crea un nuevo clientes.
    â€¢ Usa DTO: ClienteCreateDTO
      la compone:
        - RazonSocial : string
        - CUIT : string
        - Direccion : string
        - Email : string
        - Telefono : string
        - Activo : bool

ðŸ”¹ PUT /api/clientes/{id}
    Actualiza clientes por el ID.
    â€¢ Usa DTO: ClienteCreateDTO
      la compone:
        - RazonSocial : string
        - CUIT : string
        - Direccion : string
        - Email : string
        - Telefono : string
        - Activo : bool

ðŸ”¹ DELETE /api/clientes/{id}
    Elimina clientes por el ID.


=============================================================
ðŸ“˜ ConfiguracionesDocumentoController â€“ /api/configuracionesdocumento
=============================================================
Gestiona configuracionesdocumentos del sistema.
ðŸ”¹ GET /api/configuracionesdocumento
    Consulta todos los configuracionesdocumentos.
    â€¢ Usa DTO: List<ConfiguracionDocumentoDTO

ðŸ”¹ GET /api/configuracionesdocumento/{tipoDocumento}
    Consulta todos los configuracionesdocumentos.
    â€¢ Usa DTO: ConfiguracionDocumentoDTO
      la compone:
        - Id : int
        - TipoDocumento : string
        - Formato : string
        - AnchoMm : int
        - AltoMm : int
        - MargenSup : int
        - MargenInf : int
        - MargenIzq : int
        - MargenDer : int
        - Fuente : string
        - TamanoFuente : int
        - Orientacion : string
        - Activo : bool

ðŸ”¹ POST /api/configuracionesdocumento
    Crea un nuevo configuracionesdocumento.
    â€¢ Usa DTO: ConfiguracionDocumentoCreateDTO
      la compone:
        - TipoDocumento : string
        - Formato : string
        - AnchoMm : int
        - AltoMm : int
        - MargenSup : int
        - MargenInf : int
        - MargenIzq : int
        - MargenDer : int
        - Fuente : string
        - TamanoFuente : int
        - Orientacion : string
        - Activo : bool

ðŸ”¹ DELETE /api/configuracionesdocumento/{id}
    Elimina configuracionesdocumento por el ID.


=============================================================
ðŸ“˜ ConfiguracionSistemaController â€“ /api/configuracionsistema
=============================================================
Gestiona configuracionsistemas del sistema.
ðŸ”¹ GET /api/configuracionsistema
    Consulta todos los configuracionsistemas.
    â€¢ Usa DTO: List<ConfiguracionSistemaDTO

ðŸ”¹ GET /api/configuracionsistema/{clave}
    Consulta todos los configuracionsistemas.
    â€¢ Usa DTO: ConfiguracionSistemaDTO
      la compone:
        - Id : int
        - Clave : string
        - Valor : string

ðŸ”¹ PUT /api/configuracionsistema/{clave}
    Actualiza configuracionsistemas.
    â€¢ Usa DTO: ConfiguracionSistemaDTO
      la compone:
        - Id : int
        - Clave : string
        - Valor : string

ðŸ”¹ PUT /api/configuracionsistema
    Actualiza configuracionsistemas.
    â€¢ Usa DTO: List<ConfiguracionSistemaDTO>

ðŸ”¹ POST /api/configuracionsistema
    Crea un nuevo configuracionsistema.
    â€¢ Usa DTO: ConfiguracionSistemaDTO
      la compone:
        - Id : int
        - Clave : string
        - Valor : string


=============================================================
ðŸ“˜ DemoController â€“ /api/demo
=============================================================
Gestiona demos del sistema.
ðŸ”¹ GET /api/demo/ping
    Consulta todos los demos.

ðŸ”¹ POST /api/demo/ModoDemo
    Crea un nuevo demo.


=============================================================
ðŸ“˜ DispositivosController â€“ /api/dispositivos
=============================================================
Gestiona dispositivos del sistema.
ðŸ”¹ GET /api/dispositivos
    Consulta todos los dispositivos.
    â€¢ Usa DTO: DTOs.Dispositivos.DispositivoListQuery

ðŸ”¹ GET /api/dispositivos/{id}
    Consulta dispositivos por el ID.

ðŸ”¹ POST /api/dispositivos
    Crea un nuevo dispositivos.
    â€¢ Usa DTO: DTOs.Dispositivos.DispositivoCreateDto

ðŸ”¹ PUT /api/dispositivos/{id}
    Actualiza dispositivos por el ID.
    â€¢ Usa DTO: DTOs.Dispositivos.DispositivoUpdateDto

ðŸ”¹ DELETE /api/dispositivos/{id}
    Elimina dispositivos por el ID.

ðŸ”¹ PUT /api/dispositivos/{id}/toggle-estado
    Actualiza dispositivos por el ID.


=============================================================
ðŸ“˜ DispositivosHealthController â€“ /api/dispositivoshealth
=============================================================
Gestiona dispositivoshealths del sistema.
ðŸ”¹ GET /api/dispositivoshealth
    Consulta todos los dispositivoshealths.


=============================================================
ðŸ“˜ DocumentacionController â€“ /api/documentacion
=============================================================
Gestiona documentacions del sistema.
ðŸ”¹ GET /api/documentacion/endpoints
    Consulta todos los documentacions.


=============================================================
ðŸ“˜ EmbalajesController â€“ /api/embalajes
=============================================================
Gestiona embalajes del sistema.
ðŸ”¹ GET /api/embalajes
    Consulta todos los embalajes.
    â€¢ Usa DTO: List<EmbalajeDTO

ðŸ”¹ GET /api/embalajes/{id}
    Consulta embalajes por el ID.
    â€¢ Usa DTO: EmbalajeDTO
      la compone:
        - Id : int
        - NombreCombo : string
        - CodigoInterno : string
        - CostoTotal : decimal
        - Detalles : List<EmbalajeDetalleDTO>
        - Producto : string
        - Lote : string
        - Unidad : string
        - Cantidad : decimal
        - CostoUnitario : decimal

ðŸ”¹ POST /api/embalajes
    Crea un nuevo embalajes.
    â€¢ Usa DTO: EmbalajeCreateDTO
      la compone:
        - NombreCombo : string
        - CodigoInterno : string
        - Detalles : List<EmbalajeDetalleCreateDTO>
        - InventarioProductoTerminadoId : int
        - Cantidad : decimal
        - Unidad : string

ðŸ”¹ DELETE /api/embalajes/{id}
    Elimina embalajes por el ID.


=============================================================
ðŸ“˜ EntradasMateriaPrimaController â€“ /api/entradasmateriaprima
=============================================================
Gestiona entradasmateriaprimas del sistema.
ðŸ”¹ POST /api/entradasmateriaprima
    Crea un nuevo entradasmateriaprima.
    â€¢ Usa DTO: EntradaMateriaPrimaDTO
      la compone:
        - Id : int
        - OrdenPedidoDetalleId : int
        - MateriaPrimaNombre : string
        - ProveedorNombre : string
        - CantidadRecibida : decimal
        - Unidad : string
        - LoteInterno : string
        - FechaRecepcion : DateTime
        - Ubicacion : string
        - Validada : bool
        - Observaciones : string
        - AlmacenNombre : string
        - Distribucion : List<EntradaMPDistribucionItemDTO>

ðŸ”¹ GET /api/entradasmateriaprima
    Consulta todos los entradasmateriaprimas.
    â€¢ Usa DTO: List<EntradaMateriaPrimaDTO

ðŸ”¹ GET /api/entradasmateriaprima/{id}
    Consulta entradasmateriaprima por el ID.
    â€¢ Usa DTO: EntradaMateriaPrimaDTO
      la compone:
        - Id : int
        - OrdenPedidoDetalleId : int
        - MateriaPrimaNombre : string
        - ProveedorNombre : string
        - CantidadRecibida : decimal
        - Unidad : string
        - LoteInterno : string
        - FechaRecepcion : DateTime
        - Ubicacion : string
        - Validada : bool
        - Observaciones : string
        - AlmacenNombre : string
        - Distribucion : List<EntradaMPDistribucionItemDTO>

ðŸ”¹ GET /api/entradasmateriaprima/pendientes-validacion
    Consulta todos los entradasmateriaprimas.
    â€¢ Usa DTO: List<EntradaMateriaPrimaDTO

ðŸ”¹ PUT /api/entradasmateriaprima/{id}/validar
    Actualiza entradasmateriaprima por el ID.


=============================================================
ðŸ“˜ ExportController â€“ /api/export
=============================================================
Gestiona exports del sistema.
ðŸ”¹ POST /api/export/universal/{format}
    Crea un nuevo export.


=============================================================
ðŸ“˜ FeatureFlagsController â€“ /api/featureflags
=============================================================
Gestiona featureflags del sistema.
ðŸ”¹ GET /api/featureflags
    Consulta todos los featureflags.

ðŸ”¹ POST /api/featureflags/auth/enable
    Crea un nuevo featureflags.

ðŸ”¹ POST /api/featureflags/auth/disable
    Crea un nuevo featureflags.

ðŸ”¹ POST /api/featureflags/swagger/require-auth
    Crea un nuevo featureflags.

ðŸ”¹ POST /api/featureflags/installer/enable
    Crea un nuevo featureflags.

ðŸ”¹ POST /api/featureflags/installer/disable
    Crea un nuevo featureflags.


=============================================================
ðŸ“˜ FormulacionesController â€“ /api/formulaciones
=============================================================
Gestiona formulaciones del sistema.
ðŸ”¹ GET /api/formulaciones
    Consulta todos los formulaciones.

ðŸ”¹ GET /api/formulaciones/{id}
    Consulta formulaciones por el ID.

ðŸ”¹ POST /api/formulaciones
    Crea un nuevo formulaciones.
    â€¢ Usa DTO: FormulacionCreateDTO
      la compone:
        - Nombre : string
        - Codigo : string
        - EsSoloAditivos : bool
        - Detalles : List<FormulacionDetalleCreateDTO>

ðŸ”¹ DELETE /api/formulaciones/{id}
    Elimina formulaciones por el ID.

ðŸ”¹ GET /api/formulaciones/{id}/costo
    Consulta formulaciones por el ID.


=============================================================
ðŸ“˜ GatewayController â€“ /api/gateway
=============================================================
Gestiona gateways del sistema.

=============================================================
ðŸ“˜ GenericExportController â€“ /api/genericexport
=============================================================
Gestiona genericexports del sistema.
ðŸ”¹ GET /api/genericexport/{module}/{format}
    Consulta todos los genericexports.

ðŸ”¹ GET /api/genericexport/test/pdf
    Consulta todos los genericexports.


=============================================================
ðŸ“˜ HealthController â€“ /api/health
=============================================================
Gestiona healths del sistema.
ðŸ”¹ GET /api/health/ping
    Consulta todos los healths.

ðŸ”¹ GET /api/health/db-status
    Consulta todos los healths.

ðŸ”¹ POST /api/health/ensure-db
    Crea un nuevo health.

ðŸ”¹ POST /api/health/insert-demo
    Crea un nuevo health.


=============================================================
ðŸ“˜ InventarioMateriaPrimaController â€“ /api/inventariomateriaprima
=============================================================
Gestiona inventariomateriaprimas del sistema.
ðŸ”¹ GET /api/inventariomateriaprima
    Consulta todos los inventariomateriaprimas.
    â€¢ Usa DTO: List<InventarioMateriaPrimaDTO

ðŸ”¹ GET /api/inventariomateriaprima/stock-por-bodega
    Consulta todos los inventariomateriaprimas.
    â€¢ Usa DTO: List<InventarioMateriaPrimaDTO

ðŸ”¹ GET /api/inventariomateriaprima/lote/{lote}
    Consulta todos los inventariomateriaprimas.
    â€¢ Usa DTO: List<InventarioMateriaPrimaDTO

ðŸ”¹ GET /api/inventariomateriaprima/stock
    Consulta todos los inventariomateriaprimas.

ðŸ”¹ GET /api/inventariomateriaprima/movimientos
    Consulta todos los inventariomateriaprimas.
    â€¢ Usa DTO: List<MovimientoInventarioMPDTO


=============================================================
ðŸ“˜ InventarioPTController â€“ /api/inventariopt
=============================================================
Gestiona inventariopts del sistema.
ðŸ”¹ GET /api/inventariopt
    Consulta todos los inventariopts.
    â€¢ Usa DTO: List<InventarioPTDTO

ðŸ”¹ GET /api/inventariopt/{id}
    Consulta inventariopt por el ID.
    â€¢ Usa DTO: InventarioPTDTO
      la compone:
        - Id : int
        - NombreProducto : string
        - Presentacion : string
        - LoteInterno : string
        - Almacen : string
        - FechaProduccion : DateTime
        - FechaVencimiento : DateTime
        - CantidadDisponible : decimal
        - CostoUnitario : decimal


=============================================================
ðŸ“˜ IoTDeviceFacadeController â€“ /api/iotdevicefacade
=============================================================
Gestiona iotdevicefacades del sistema.

=============================================================
ðŸ“˜ IoTDevicesController â€“ /api/iotdevices
=============================================================
Gestiona iotdevices del sistema.

=============================================================
ðŸ“˜ IoTLogisticaController â€“ /api/iotlogistica
=============================================================
Gestiona iotlogisticas del sistema.
ðŸ”¹ POST /api/iotlogistica/registro
    Crea un nuevo iotlogistica.

ðŸ”¹ GET /api/iotlogistica/bitacora/{codigoBarra}
    Consulta todos los iotlogisticas.


=============================================================
ðŸ“˜ LoginController â€“ /api/login
=============================================================
Gestiona logins del sistema.

=============================================================
ðŸ“˜ MantenimientoEquiposController â€“ /api/mantenimientoequipos
=============================================================
Gestiona mantenimientoequipos del sistema.
ðŸ”¹ PUT /api/mantenimientoequipos/ordenes-trabajo/{id}/estado
    Actualiza mantenimientoequipos por el ID.
    â€¢ Usa DTO: DTOs.Mantenimiento.OTChangeStatusDto

ðŸ”¹ POST /api/mantenimientoequipos/ordenes-trabajo/{id}/lecturas
    AcciÃ³n especial sobre el mantenimientoequipos por el ID.
    â€¢ Usa DTO: DTOs.Mantenimiento.LecturasCreateDto

ðŸ”¹ GET /api/mantenimientoequipos/repuestos
    Consulta todos los mantenimientoequipos.
    â€¢ Usa DTO: DTOs.Mantenimiento.MaintPaginationQuery

ðŸ”¹ POST /api/mantenimientoequipos/equipos/{id}/asignar-codigo-barra
    AcciÃ³n especial sobre el mantenimientoequipos por el ID.

ðŸ”¹ POST /api/mantenimientoequipos/equipos
    Crea un nuevo mantenimientoequipos.
    â€¢ Usa DTO: DTOs.Mantenimiento.EquipoCreateDto

ðŸ”¹ PUT /api/mantenimientoequipos/equipos/{id}
    Actualiza mantenimientoequipos por el ID.
    â€¢ Usa DTO: DTOs.Mantenimiento.EquipoUpdateDto

ðŸ”¹ GET /api/mantenimientoequipos/equipos/{id}
    Consulta mantenimientoequipos por el ID.

ðŸ”¹ GET /api/mantenimientoequipos/equipos/{id}/mantenimientos
    Consulta mantenimientoequipos por el ID.
    â€¢ Usa DTO: DTOs.Mantenimiento.OTQueryDto


=============================================================
ðŸ“˜ MateriaPrimaPaginatedController â€“ /api/materiaprimapaginated
=============================================================
Gestiona materiaprimapaginateds del sistema.

=============================================================
ðŸ“˜ MateriasPrimasController â€“ /api/materiasprimas
=============================================================
Gestiona materiasprimas del sistema.
ðŸ”¹ POST /api/materiasprimas/{id}/dividir
    AcciÃ³n especial sobre el materiasprimas por el ID.
    â€¢ Usa DTO: List<TracerSoftware.API.DTOs.MateriaPrimaDerivadaCreateDTO>

ðŸ”¹ GET /api/materiasprimas
    Consulta todos los materiasprimas.
    â€¢ Usa DTO: List<MateriaPrimaDTO

ðŸ”¹ GET /api/materiasprimas/{id}
    Consulta materiasprimas por el ID.
    â€¢ Usa DTO: MateriaPrimaDTO
      la compone:
        - Id : int
        - Fecha : DateTime
        - MateriaPrimaId : int
        - MateriaPrimaNombre : string
        - LoteInterno : string
        - AlmacenId : int
        - AlmacenNombre : string
        - Cantidad : decimal
        - Unidad : string
        - Motivo : string
        - UsuarioCreacion : string
        - Aprobada : bool

ðŸ”¹ POST /api/materiasprimas
    Crea un nuevo materiasprimas.
    â€¢ Usa DTO: MateriaPrimaCreateDTO
      la compone:
        - MateriaPrimaId : int
        - LoteInterno : string
        - AlmacenId : int
        - Cantidad : decimal
        - Unidad : string
        - Motivo : string

ðŸ”¹ PUT /api/materiasprimas/{id}
    Actualiza materiasprimas por el ID.
    â€¢ Usa DTO: MateriaPrimaCreateDTO
      la compone:
        - MateriaPrimaId : int
        - LoteInterno : string
        - AlmacenId : int
        - Cantidad : decimal
        - Unidad : string
        - Motivo : string

ðŸ”¹ DELETE /api/materiasprimas/{id}
    Elimina materiasprimas por el ID.

ðŸ”¹ PATCH /api/materiasprimas/{id}/toggle-estado
    Actualiza parcialmente materiasprimas por el ID.


=============================================================
ðŸ“˜ OrdenesProduccionController â€“ /api/ordenesproduccion
=============================================================
Gestiona ordenesproduccions del sistema.
ðŸ”¹ GET /api/ordenesproduccion
    Consulta todos los ordenesproduccions.
    â€¢ Usa DTO: List<OrdenProduccionDTO

ðŸ”¹ GET /api/ordenesproduccion/{id}
    Consulta ordenesproduccion por el ID.
    â€¢ Usa DTO: OrdenProduccionDTO
      la compone:
        - Id : int
        - Codigo : string
        - ProcesoProduccionId : int
        - ProcesoNombre : string
        - Estado : string
        - CantidadPlanificada : decimal
        - UnidadMedida : string
        - Notas : string
        - FechaCreacion : DateTime
        - CreadoPor : string
        - Items : List<OrdenProduccionItemDTO>
        - Consumos : List<OrdenProduccionConsumoDTO>
        - EjecucionesProcedimientos : List<ProcedimientoEjecucionDTO>
        - Id : int
        - ProductoTerminadoId : int
        - ProductoNombre : string
        - CantidadPlanificada : decimal
        - CantidadProducida : decimal
        - Variacion : decimal
        - UnidadMedida : string
        - Id : int
        - ProductoId : int
        - ProductoNombre : string
        - EsAditivo : bool
        - Lote : string
        - Cantidad : decimal
        - UnidadMedida : string
        - FechaConsumo : DateTime
        - CreadoPor : string
        - Id : int
        - ProcedimientoProduccionId : int
        - ProcedimientoNombre : string
        - EstadoPaso : string
        - Observaciones : string
        - OperadorResponsable : string
        - Mediciones : List<ProcedimientoMedicionDTO>
        - Id : int
        - ProcedimientoParametroId : int
        - ParametroNombre : string
        - ParametroUnidad : string
        - EnRango : bool
        - FechaMedicion : DateTime
        - MedidoPor : string
        - Observaciones : string

ðŸ”¹ POST /api/ordenesproduccion
    Crea un nuevo ordenesproduccion.
    â€¢ Usa DTO: OrdenProduccionCreateDTO
      la compone:
        - ProcesoProduccionId : int
        - CantidadPlanificada : decimal
        - UnidadMedidaId : int
        - Notas : string
        - ItemsEsperados : List<OrdenProduccionItemPlanDTO>
        - ProductoTerminadoId : int
        - CantidadPlanificada : decimal
        - UnidadMedidaId : int

ðŸ”¹ POST /api/ordenesproduccion/{id}/iniciar
    AcciÃ³n especial sobre el ordenesproduccion por el ID.

ðŸ”¹ POST /api/ordenesproduccion/{id}/pausar
    AcciÃ³n especial sobre el ordenesproduccion por el ID.

ðŸ”¹ POST /api/ordenesproduccion/{id}/reanudar
    AcciÃ³n especial sobre el ordenesproduccion por el ID.

ðŸ”¹ POST /api/ordenesproduccion/{id}/finalizar
    AcciÃ³n especial sobre el ordenesproduccion por el ID.

ðŸ”¹ POST /api/ordenesproduccion/{id}/consumos
    AcciÃ³n especial sobre el ordenesproduccion por el ID.
    â€¢ Usa DTO: List<OrdenProduccionConsumoCreateDTO>

ðŸ”¹ POST /api/ordenesproduccion/{id}/consumos/desde-formulacion
    AcciÃ³n especial sobre el ordenesproduccion por el ID.
    â€¢ Usa DTO: ConsumoFormulacionRequestDTO?

ðŸ”¹ POST /api/ordenesproduccion/{id}/outputs
    AcciÃ³n especial sobre el ordenesproduccion por el ID.
    â€¢ Usa DTO: List<OrdenProduccionOutputCreateDTO>

ðŸ”¹ POST /api/ordenesproduccion/{id}/procedimientos/{procedimientoEjecucionId}/iniciar
    AcciÃ³n especial sobre el ordenesproduccion por el ID.

ðŸ”¹ POST /api/ordenesproduccion/{id}/procedimientos/{procedimientoEjecucionId}/finalizar
    AcciÃ³n especial sobre el ordenesproduccion por el ID.

ðŸ”¹ POST /api/ordenesproduccion/{id}/procedimientos/{procedimientoEjecucionId}/mediciones
    AcciÃ³n especial sobre el ordenesproduccion por el ID.
    â€¢ Usa DTO: List<ProcedimientoMedicionCreateDTO>

ðŸ”¹ POST /api/ordenesproduccion/con-items
    Crea un nuevo ordenesproduccion.
    â€¢ Usa DTO: OrdenProduccionCreateDTO
      la compone:
        - ProcesoProduccionId : int
        - CantidadPlanificada : decimal
        - UnidadMedidaId : int
        - Notas : string
        - ItemsEsperados : List<OrdenProduccionItemPlanDTO>
        - ProductoTerminadoId : int
        - CantidadPlanificada : decimal
        - UnidadMedidaId : int

ðŸ”¹ POST /api/ordenesproduccion/{id}/outputs-reales
    AcciÃ³n especial sobre el ordenesproduccion por el ID.
    â€¢ Usa DTO: List<OutputRealDTO>

ðŸ”¹ POST /api/ordenesproduccion/{id}/mermas
    AcciÃ³n especial sobre el ordenesproduccion por el ID.
    â€¢ Usa DTO: RegistrarMermasProduccionDTO

ðŸ”¹ POST /api/ordenesproduccion/{id}/finalizar-con-variaciones
    AcciÃ³n especial sobre el ordenesproduccion por el ID.
    â€¢ Usa DTO: FinalizarOrdenProduccionResponseDTO


=============================================================
ðŸ“˜ OrdenPedidoMateriaPrimaController â€“ /api/ordenpedidomateriaprima
=============================================================
Gestiona ordenpedidomateriaprimas del sistema.
ðŸ”¹ POST /api/ordenpedidomateriaprima
    Crea un nuevo ordenpedidomateriaprima.
    â€¢ Usa DTO: OrdenPedidoMateriaPrimaDTO
      la compone:
        - Id : int
        - ProveedorId : int
        - ProveedorNombre : string
        - Fecha : DateTime
        - Confirmada : bool
        - Detalles : List<OrdenPedidoDetalleDTO>

ðŸ”¹ GET /api/ordenpedidomateriaprima
    Consulta todos los ordenpedidomateriaprimas.
    â€¢ Usa DTO: List<OrdenPedidoMateriaPrimaDTO

ðŸ”¹ GET /api/ordenpedidomateriaprima/{id}
    Consulta ordenpedidomateriaprima por el ID.
    â€¢ Usa DTO: OrdenPedidoMateriaPrimaDTO
      la compone:
        - Id : int
        - ProveedorId : int
        - ProveedorNombre : string
        - Fecha : DateTime
        - Confirmada : bool
        - Detalles : List<OrdenPedidoDetalleDTO>

ðŸ”¹ PUT /api/ordenpedidomateriaprima/{id}/confirmar
    Actualiza ordenpedidomateriaprima por el ID.


=============================================================
ðŸ“˜ OrdenSalidaController â€“ /api/ordensalida
=============================================================
Gestiona ordensalidas del sistema.
ðŸ”¹ GET /api/ordensalida
    Consulta todos los ordensalidas.
    â€¢ Usa DTO: List<OrdenSalidaDTO

ðŸ”¹ GET /api/ordensalida/{id}
    Consulta ordensalida por el ID.
    â€¢ Usa DTO: OrdenSalidaDTO
      la compone:
        - Id : int
        - Cliente : string
        - Fecha : DateTime
        - Confirmada : bool
        - Detalles : List<OrdenSalidaDetalleDTO>

ðŸ”¹ POST /api/ordensalida
    Crea un nuevo ordensalida.
    â€¢ Usa DTO: OrdenSalidaCreateDTO
      la compone:
        - ClienteId : int
        - Detalles : List<OrdenSalidaDetalleCreateDTO>

ðŸ”¹ PUT /api/ordensalida/{id}/confirmar
    Actualiza ordensalida por el ID.

ðŸ”¹ GET /api/ordensalida/{id}/remito
    Consulta ordensalida por el ID.

ðŸ”¹ GET /api/ordensalida/{id}/pdf
    Consulta ordensalida por el ID.


=============================================================
ðŸ“˜ PaginationExampleController â€“ /api/paginationexample
=============================================================
Gestiona paginationexamples del sistema.
ðŸ”¹ GET /api/paginationexample/almacenes
    Consulta todos los paginationexamples.

ðŸ”¹ GET /api/paginationexample/categorias
    Consulta todos los paginationexamples.

ðŸ”¹ GET /api/paginationexample/almacenes-simple
    Consulta todos los paginationexamples.


=============================================================
ðŸ“˜ PaginationTestController â€“ /api/paginationtest
=============================================================
Gestiona paginationtests del sistema.
ðŸ”¹ GET /api/paginationtest/universal
    Consulta todos los paginationtests.


=============================================================
ðŸ“˜ ProcesosController â€“ /api/procesos
=============================================================
Gestiona procesos del sistema.
ðŸ”¹ GET /api/procesos
    Consulta todos los procesos.
    â€¢ Usa DTO: List<ProcesoProduccionDTO

ðŸ”¹ GET /api/procesos/{id}
    Consulta procesos por el ID.
    â€¢ Usa DTO: ProcesoProduccionDTO
      la compone:
        - Id : int
        - Nombre : string
        - Descripcion : string
        - Activo : bool
        - FechaCreacion : DateTime
        - Procedimientos : List<ProcedimientoProduccionDTO>

ðŸ”¹ POST /api/procesos
    Crea un nuevo procesos.
    â€¢ Usa DTO: ProcesoProduccionCreateDTO
      la compone:
        - Nombre : string
        - Descripcion : string
        - Activo : bool
        - Procedimientos : List<ProcedimientoProduccionCreateDTO>

ðŸ”¹ PUT /api/procesos/{id}
    Actualiza procesos por el ID.
    â€¢ Usa DTO: ProcesoProduccionCreateDTO
      la compone:
        - Nombre : string
        - Descripcion : string
        - Activo : bool
        - Procedimientos : List<ProcedimientoProduccionCreateDTO>

ðŸ”¹ DELETE /api/procesos/{id}
    Elimina procesos por el ID.

ðŸ”¹ GET /api/procesos/{id}/procedimientos
    Consulta procesos por el ID.
    â€¢ Usa DTO: List<ProcedimientoProduccionDTO

ðŸ”¹ POST /api/procesos/{id}/procedimientos
    AcciÃ³n especial sobre el procesos por el ID.
    â€¢ Usa DTO: ProcedimientoProduccionCreateDTO
      la compone:
        - Nombre : string
        - Descripcion : string
        - Orden : int
        - UsaFormulacion : bool
        - Parametros : List<ProcedimientoParametroCreateDTO>
        - Nombre : string
        - Unidad : string
        - TipoDato : int
        - Obligatorio : bool
        - Activo : bool

ðŸ”¹ GET /api/procesos/procedimientos/{procedimientoId}/parametros
    Consulta todos los procesos.
    â€¢ Usa DTO: List<ProcedimientoParametroDTO

ðŸ”¹ POST /api/procesos/procedimientos/{procedimientoId}/parametros
    Crea un nuevo procesos.
    â€¢ Usa DTO: ProcedimientoParametroCreateDTO


=============================================================
ðŸ“˜ ProductosTerminadosController â€“ /api/productosterminados
=============================================================
Gestiona productosterminados del sistema.
ðŸ”¹ GET /api/productosterminados
    Consulta todos los productosterminados.
    â€¢ Usa DTO: List<ProductoTerminadoDTO

ðŸ”¹ GET /api/productosterminados/{id}
    Consulta productosterminados por el ID.
    â€¢ Usa DTO: ProductoTerminadoDTO
      la compone:
        - Id : int
        - Nombre : string
        - Activo : bool

ðŸ”¹ POST /api/productosterminados
    Crea un nuevo productosterminados.
    â€¢ Usa DTO: ProductoTerminadoCreateDTO
      la compone:
        - Nombre : string
        - Activo : bool

ðŸ”¹ PUT /api/productosterminados/{id}
    Actualiza productosterminados por el ID.
    â€¢ Usa DTO: ProductoTerminadoCreateDTO
      la compone:
        - Nombre : string
        - Activo : bool

ðŸ”¹ DELETE /api/productosterminados/{id}
    Elimina productosterminados por el ID.

ðŸ”¹ POST /api/productosterminados/presentaciones
    Crea un nuevo productosterminados.
    â€¢ Usa DTO: PresentacionPTCreateDTO
      la compone:
        - ProductoTerminadoId : int
        - NombrePresentacion : string
        - PesoNeto : decimal
        - Unidad : string
        - GTIN : string

ðŸ”¹ DELETE /api/productosterminados/presentaciones/{id}
    Elimina productosterminados por el ID.


=============================================================
ðŸ“˜ ProveedoresController â€“ /api/proveedores
=============================================================
Gestiona proveedores del sistema.
ðŸ”¹ GET /api/proveedores
    Consulta todos los proveedores.
    â€¢ Usa DTO: List<ProveedorDTO

ðŸ”¹ GET /api/proveedores/{id}
    Consulta proveedores por el ID.
    â€¢ Usa DTO: ProveedorDTO
      la compone:
        - Id : int
        - Nombre : string
        - CUIT : string
        - Direccion : string
        - Telefono : string
        - Email : string
        - Activo : bool
        - MateriasPrimas : List<MateriaPrimaDTO>

ðŸ”¹ POST /api/proveedores
    Crea un nuevo proveedores.
    â€¢ Usa DTO: ProveedorCreateDTO
      la compone:
        - Nombre : string
        - CUIT : string
        - Direccion : string
        - Telefono : string
        - Email : string
        - MateriaPrimaIds : List<int>

ðŸ”¹ PUT /api/proveedores/{id}
    Actualiza proveedores por el ID.
    â€¢ Usa DTO: ProveedorCreateDTO
      la compone:
        - Nombre : string
        - CUIT : string
        - Direccion : string
        - Telefono : string
        - Email : string
        - MateriaPrimaIds : List<int>

ðŸ”¹ DELETE /api/proveedores/{id}
    Elimina proveedores por el ID.

ðŸ”¹ PATCH /api/proveedores/{id}/toggle-estado
    Actualiza parcialmente proveedores por el ID.


=============================================================
ðŸ“˜ RolesController â€“ /api/roles
=============================================================
Gestiona roles del sistema.
ðŸ”¹ GET /api/roles
    Consulta todos los roles.
    â€¢ Usa DTO: IEnumerable<RolDTO

ðŸ”¹ GET /api/roles/{id}
    Consulta roles por el ID.
    â€¢ Usa DTO: RolDTO
      la compone:
        - Id : int
        - Nombre : string
        - Unidad : string
        - Descripcion : string
        - Activo : bool

ðŸ”¹ POST /api/roles
    Crea un nuevo roles.
    â€¢ Usa DTO: DTOs.RolDTO

ðŸ”¹ PUT /api/roles/{id}
    Actualiza roles por el ID.
    â€¢ Usa DTO: DTOs.RolDTO

ðŸ”¹ DELETE /api/roles/{id}
    Elimina roles por el ID.


=============================================================
ðŸ“˜ SetupController â€“ /api/setup
=============================================================
Gestiona setups del sistema.
ðŸ”¹ GET /api/setup/status
    Consulta todos los setups.

ðŸ”¹ POST /api/setup/create_bd
    Crea un nuevo setup.

ðŸ”¹ POST /api/setup/install
    Crea un nuevo setup.


=============================================================
ðŸ“˜ TestAdvancedLoggingController â€“ /api/testadvancedlogging
=============================================================
Gestiona testadvancedloggings del sistema.
ðŸ”¹ GET /api/testadvancedlogging/status
    Consulta todos los testadvancedloggings.

ðŸ”¹ POST /api/testadvancedlogging/performance/test
    Crea un nuevo testadvancedlogging.

ðŸ”¹ POST /api/testadvancedlogging/security/test
    Crea un nuevo testadvancedlogging.

ðŸ”¹ POST /api/testadvancedlogging/audit/test
    Crea un nuevo testadvancedlogging.

ðŸ”¹ POST /api/testadvancedlogging/levels/test
    Crea un nuevo testadvancedlogging.

ðŸ”¹ POST /api/testadvancedlogging/structured/test
    Crea un nuevo testadvancedlogging.


=============================================================
ðŸ“˜ TestDocumentationController â€“ /api/testdocumentation
=============================================================
Gestiona testdocumentations del sistema.
ðŸ”¹ GET /api/testdocumentation/openapi/json
    Consulta todos los testdocumentations.

ðŸ”¹ GET /api/testdocumentation/openapi/yaml
    Consulta todos los testdocumentations.

ðŸ”¹ GET /api/testdocumentation/postman
    Consulta todos los testdocumentations.

ðŸ”¹ GET /api/testdocumentation/markdown
    Consulta todos los testdocumentations.

ðŸ”¹ GET /api/testdocumentation/sdk/typescript
    Consulta todos los testdocumentations.

ðŸ”¹ GET /api/testdocumentation/sdk/csharp
    Consulta todos los testdocumentations.

ðŸ”¹ GET /api/testdocumentation/version-test
    Consulta todos los testdocumentations.

ðŸ”¹ GET /api/testdocumentation/version-test
    Consulta todos los testdocumentations.

ðŸ”¹ GET /api/testdocumentation/info
    Consulta todos los testdocumentations.

ðŸ”¹ GET /api/testdocumentation/performance-test
    Consulta todos los testdocumentations.


=============================================================
ðŸ“˜ TestErrorHandlingController â€“ /api/testerrorhandling
=============================================================
Gestiona testerrorhandlings del sistema.
ðŸ”¹ GET /api/testerrorhandling/exception
    Consulta todos los testerrorhandlings.

ðŸ”¹ GET /api/testerrorhandling/business-logic
    Consulta todos los testerrorhandlings.

ðŸ”¹ GET /api/testerrorhandling/validation
    Consulta todos los testerrorhandlings.

ðŸ”¹ GET /api/testerrorhandling/not-found
    Consulta todos los testerrorhandlings.

ðŸ”¹ GET /api/testerrorhandling/external-service
    Consulta todos los testerrorhandlings.

ðŸ”¹ GET /api/testerrorhandling/timeout
    Consulta todos los testerrorhandlings.

ðŸ”¹ GET /api/testerrorhandling/unauthorized
    Consulta todos los testerrorhandlings.

ðŸ”¹ GET /api/testerrorhandling/argument
    Consulta todos los testerrorhandlings.

ðŸ”¹ POST /api/testerrorhandling/model-validation
    Crea un nuevo testerrorhandling.

ðŸ”¹ GET /api/testerrorhandling/success
    Consulta todos los testerrorhandlings.

ðŸ”¹ GET /api/testerrorhandling/delayed
    Consulta todos los testerrorhandlings.


=============================================================
ðŸ“˜ TestPerformanceController â€“ /api/testperformance
=============================================================
Gestiona testperformances del sistema.
ðŸ”¹ GET /api/testperformance/cache/distributed/test
    Consulta todos los testperformances.

ðŸ”¹ GET /api/testperformance/cache/memory/test
    Consulta todos los testperformances.

ðŸ”¹ POST /api/testperformance/cache/distributed/multiple
    Crea un nuevo testperformance.

ðŸ”¹ GET /api/testperformance/cache/memory/get-or-create/{id}
    Consulta testperformance por el ID.

ðŸ”¹ POST /api/testperformance/performance/stress-test
    Crea un nuevo testperformance.

ðŸ”¹ GET /api/testperformance/metrics/performance
    Consulta todos los testperformances.

ðŸ”¹ GET /api/testperformance/metrics/cache
    Consulta todos los testperformances.

ðŸ”¹ DELETE /api/testperformance/cache/clear
    Elimina testperformances.

ðŸ”¹ POST /api/testperformance/metrics/reset
    Crea un nuevo testperformance.

ðŸ”¹ GET /api/testperformance/simulate/slow-operation/{delayMs}
    Consulta todos los testperformances.

ðŸ”¹ GET /api/testperformance/cache/response-test
    Consulta todos los testperformances.


=============================================================
ðŸ“˜ TestRateLimitController â€“ /api/testratelimit
=============================================================
Gestiona testratelimits del sistema.
ðŸ”¹ GET /api/testratelimit/basic
    Consulta todos los testratelimits.

ðŸ”¹ GET /api/testratelimit/strict
    Consulta todos los testratelimits.

ðŸ”¹ GET /api/testratelimit/unlimited
    Consulta todos los testratelimits.

ðŸ”¹ POST /api/testratelimit/expensive
    Crea un nuevo testratelimit.


=============================================================
ðŸ“˜ TestValidationController â€“ /api/testvalidation
=============================================================
Gestiona testvalidations del sistema.
ðŸ”¹ POST /api/testvalidation/usuario/valid
    Crea un nuevo testvalidation.
    â€¢ Usa DTO: UsuarioCreateDTO
      la compone:
        - RolId : int

ðŸ”¹ POST /api/testvalidation/usuario/invalid
    Crea un nuevo testvalidation.
    â€¢ Usa DTO: UsuarioCreateDTO
      la compone:
        - RolId : int

ðŸ”¹ POST /api/testvalidation/cliente/test
    Crea un nuevo testvalidation.
    â€¢ Usa DTO: ClienteCreateDTO
      la compone:
        - RazonSocial : string
        - CUIT : string
        - Direccion : string
        - Email : string
        - Telefono : string
        - Activo : bool

ðŸ”¹ POST /api/testvalidation/producto/test
    Crea un nuevo testvalidation.
    â€¢ Usa DTO: ProductoTerminadoCreateDTO
      la compone:
        - Nombre : string
        - Activo : bool

ðŸ”¹ POST /api/testvalidation/login/test
    Crea un nuevo testvalidation.
    â€¢ Usa DTO: LoginRequestDTO
      la compone:
        - Nombre : string
        - Password : string

ðŸ”¹ POST /api/testvalidation/complex
    Crea un nuevo testvalidation.
    â€¢ Usa DTO: ComplexValidationTestDTO

ðŸ”¹ GET /api/testvalidation/status
    Consulta todos los testvalidations.


=============================================================
ðŸ“˜ TrazabilidadController â€“ /api/trazabilidad
=============================================================
Gestiona trazabilidads del sistema.
ðŸ”¹ GET /api/trazabilidad/hacia-atras/{codigoBarra}
    Consulta todos los trazabilidads.

ðŸ”¹ GET /api/trazabilidad/hacia-adelante/{codigoBarra}
    Consulta todos los trazabilidads.


=============================================================
ðŸ“˜ UnidadesMedidaController â€“ /api/unidadesmedida
=============================================================
Gestiona unidadesmedidas del sistema.
ðŸ”¹ GET /api/unidadesmedida
    Consulta todos los unidadesmedidas.
    â€¢ Usa DTO: List<UnidadMedidaDTO

ðŸ”¹ GET /api/unidadesmedida/tipo/{tipo}
    Consulta todos los unidadesmedidas.
    â€¢ Usa DTO: List<UnidadMedidaDTO

ðŸ”¹ GET /api/unidadesmedida/debug
    Consulta todos los unidadesmedidas.


=============================================================
ðŸ“˜ UsuariosController â€“ /api/usuarios
=============================================================
Gestiona usuarios del sistema.
ðŸ”¹ GET /api/usuarios
    Consulta todos los usuarios.
    â€¢ Usa DTO: IEnumerable<UsuarioDTO

ðŸ”¹ GET /api/usuarios/{id}
    Consulta usuarios por el ID.
    â€¢ Usa DTO: UsuarioDTO
      la compone:
        - UsuarioId : int
        - Activo : bool
        - RolId : int

ðŸ”¹ POST /api/usuarios
    Crea un nuevo usuarios.
    â€¢ Usa DTO: UsuarioCreateDTO
      la compone:
        - RolId : int

ðŸ”¹ PUT /api/usuarios/{id}
    Actualiza usuarios por el ID.
    â€¢ Usa DTO: UsuarioCreateDTO
      la compone:
        - RolId : int

ðŸ”¹ PUT /api/usuarios/{id}/toggle-estado
    Actualiza usuarios por el ID.
    â€¢ Usa id de usuario UsuarioId
      la compone:
        - Activo : bool

ðŸ”¹ DELETE /api/usuarios/{id}
    Elimina usuarios por el ID.

ðŸ”¹ POST /api/usuarios/{id}/cambiar-password
    Cambia la contraseÃ±a del usuarios por el ID.
    â€¢ Usa DTO: CambiarPasswordDTO
      la compone:
        - PasswordActual : string
        - PasswordNueva : string
        - ConfirmarPasswordNueva : string


=============================================================
ðŸ“˜ LoginController â€“ /api/login
=============================================================
Gestiona logins del sistema.

=============================================================
ðŸ“˜ GS1SequencesController â€“ /api/gs1sequences
=============================================================
Gestiona gs1sequences del sistema.
ðŸ”¹ POST /api/gs1sequences/generate
    Crea un nuevo gs1sequences.

ðŸ”¹ POST /api/gs1sequences/validate/gtin
    Crea un nuevo gs1sequences.

ðŸ”¹ GET /api/gs1sequences/exists
    Consulta todos los gs1sequences.

ðŸ”¹ POST /api/gs1sequences/reserve
    Crea un nuevo gs1sequences.

ðŸ”¹ POST /api/gs1sequences/confirm
    Crea un nuevo gs1sequences.

ðŸ”¹ POST /api/gs1sequences/release
    Crea un nuevo gs1sequences.

ðŸ”¹ GET /api/gs1sequences/stats
    Consulta todos los gs1sequences.
    â€¢ Usa DTO: GS1StatsDTO

ðŸ”¹ POST /api/gs1sequences/cleanup
    Crea un nuevo gs1sequences.

ðŸ”¹ POST /api/gs1sequences/batch/gtin13
    Crea un nuevo gs1sequences.


=============================================================
ðŸ“˜ JobsController â€“ /api/jobs
=============================================================
Gestiona jobs del sistema.

=============================================================
ðŸ“˜ OperationalTemplatesController â€“ /api/operationaltemplates
=============================================================
Gestiona operationaltemplates del sistema.
ðŸ”¹ POST /api/operationaltemplates/load
    Crea un nuevo operationaltemplates.

ðŸ”¹ POST /api/operationaltemplates/regenerate
    Crea un nuevo operationaltemplates.

ðŸ”¹ GET /api/operationaltemplates/categories
    Consulta todos los operationaltemplates.

ðŸ”¹ GET /api/operationaltemplates/by-category/{category}
    Consulta todos los operationaltemplates.
    â€¢ Usa DTO: IEnumerable<LabelTemplateDTO

ðŸ”¹ GET /api/operationaltemplates/categories/detailed
    Consulta todos los operationaltemplates.

ðŸ”¹ POST /api/operationaltemplates/load/{templateFileName}
    Crea un nuevo operationaltemplates.
    â€¢ Usa DTO: LabelTemplateDTO
      la compone:
        - Id : int
        - Name : string
        - TemplateType : string
        - Category : string
        - WidthMm : decimal
        - HeightMm : decimal
        - WidthDots : int
        - HeightDots : int
        - BaseDpi : int
        - MarginTop : int
        - MarginBottom : int
        - MarginLeft : int
        - MarginRight : int
        - IsActive : bool
        - IsSystemTemplate : bool
        - Version : int
        - CreatedAt : DateTime
        - UpdatedAt : DateTime
        - Name : string
        - TemplateType : string
        - Category : string
        - WidthMm : decimal
        - HeightMm : decimal
        - WidthDots : int
        - HeightDots : int
        - BaseDpi : int
        - MarginTop : int
        - MarginBottom : int
        - MarginLeft : int
        - MarginRight : int
        - IsActive : bool
        - IsDefault : bool
        - AvailableFields : List<string>
        - RequiredFields : List<string>
        - UsageCount : int

ðŸ”¹ GET /api/operationaltemplates/stats
    Consulta todos los operationaltemplates.


=============================================================
ðŸ“˜ PreviewController â€“ /api/preview
=============================================================
Gestiona previews del sistema.
ðŸ”¹ POST /api/preview/template/{templateId}
    Crea un nuevo preview.

ðŸ”¹ POST /api/preview/direct
    Crea un nuevo preview.

ðŸ”¹ POST /api/preview/live
    Crea un nuevo preview.

ðŸ”¹ POST /api/preview/template/{templateId}/multiple
    Crea un nuevo preview.

ðŸ”¹ POST /api/preview/compare/{templateId1}/{templateId2}
    Crea un nuevo preview.

ðŸ”¹ POST /api/preview/validate
    Crea un nuevo preview.

ðŸ”¹ POST /api/preview/template/{templateId}/mobile
    Crea un nuevo preview.

ðŸ”¹ POST /api/preview/template/{templateId}/export
    Crea un nuevo preview.

ðŸ”¹ POST /api/preview/thumbnails
    Crea un nuevo preview.

ðŸ”¹ GET /api/preview/sample-data/{category}
    Consulta todos los previews.

ðŸ”¹ GET /api/preview/status
    Consulta todos los previews.


=============================================================
ðŸ“˜ PrintersController â€“ /api/printers
=============================================================
Gestiona printers del sistema.

=============================================================
ðŸ“˜ PrintingAuditController â€“ /api/printingaudit
=============================================================
Gestiona printingaudits del sistema.
ðŸ”¹ GET /api/printingaudit/history
    Consulta todos los printingaudits.
    â€¢ Usa DTO: typeof(PagedResult<PrintAuditEventDTO>

ðŸ”¹ POST /api/printingaudit/reports
    Crea un nuevo printingaudit.

ðŸ”¹ GET /api/printingaudit/metrics
    Consulta todos los printingaudits.

ðŸ”¹ POST /api/printingaudit/analysis/patterns
    Crea un nuevo printingaudit.

ðŸ”¹ GET /api/printingaudit/security/alerts
    Consulta todos los printingaudits.

ðŸ”¹ GET /api/printingaudit/templates/{templateId}/changes
    Consulta todos los printingaudits.
    â€¢ Usa DTO: typeof(List<TemplateChangeHistoryDTO>

ðŸ”¹ GET /api/printingaudit/resources/{resourceType}
    Consulta todos los printingaudits.

ðŸ”¹ POST /api/printingaudit/security/anomalies
    Crea un nuevo printingaudit.

ðŸ”¹ POST /api/printingaudit/export
    Crea un nuevo printingaudit.

ðŸ”¹ GET /api/printingaudit/users/{userId?}/stats
    Consulta todos los printingaudits.

ðŸ”¹ POST /api/printingaudit/dashboard
    Crea un nuevo printingaudit.

ðŸ”¹ POST /api/printingaudit/archive
    Crea un nuevo printingaudit.

ðŸ”¹ GET /api/printingaudit/metrics/quick
    Consulta todos los printingaudits.

ðŸ”¹ GET /api/printingaudit/health
    Consulta todos los printingaudits.


=============================================================
ðŸ“˜ PrintingCostController â€“ /api/printingcost
=============================================================
Gestiona printingcosts del sistema.
ðŸ”¹ GET /api/printingcost/configurations
    Consulta todos los printingcosts.
    â€¢ Usa DTO: PagedResult<PrintingCostConfigDTO

ðŸ”¹ GET /api/printingcost/configurations/{id}
    Consulta printingcost por el ID.
    â€¢ Usa DTO: PrintingCostConfigDTO

ðŸ”¹ POST /api/printingcost/configurations
    Crea un nuevo printingcost.
    â€¢ Usa DTO: PrintingCostConfigDTO

ðŸ”¹ PUT /api/printingcost/configurations/{id}
    Actualiza printingcost por el ID.
    â€¢ Usa DTO: PrintingCostConfigDTO

ðŸ”¹ DELETE /api/printingcost/configurations/{id}
    Elimina printingcost por el ID.

ðŸ”¹ PATCH /api/printingcost/configurations/{id}/toggle-status
    Actualiza parcialmente printingcost por el ID.

ðŸ”¹ GET /api/printingcost/configurations/{id}/history
    Consulta printingcost por el ID.
    â€¢ Usa DTO: PagedResult<CostConfigHistoryDTO

ðŸ”¹ POST /api/printingcost/calculate
    Crea un nuevo printingcost.
    â€¢ Usa DTO: PrintJobCostResultDTO

ðŸ”¹ GET /api/printingcost/print-jobs/{printJobId}
    Consulta todos los printingcosts.
    â€¢ Usa DTO: PrintJobCostResultDTO

ðŸ”¹ POST /api/printingcost/print-jobs/{printJobId}/recalculate
    Crea un nuevo printingcost.
    â€¢ Usa DTO: PrintJobCostResultDTO

ðŸ”¹ GET /api/printingcost/print-jobs/history
    Consulta todos los printingcosts.
    â€¢ Usa DTO: PagedResult<PrintJobCostDTO

ðŸ”¹ GET /api/printingcost/device-mappings
    Consulta todos los printingcosts.
    â€¢ Usa DTO: PagedResult<DeviceCostMappingDTO

ðŸ”¹ GET /api/printingcost/device-mappings/{id}
    Consulta printingcost por el ID.
    â€¢ Usa DTO: DeviceCostMappingDTO

ðŸ”¹ POST /api/printingcost/device-mappings
    Crea un nuevo printingcost.
    â€¢ Usa DTO: DeviceCostMappingDTO

ðŸ”¹ PUT /api/printingcost/device-mappings/{id}
    Actualiza printingcost por el ID.
    â€¢ Usa DTO: DeviceCostMappingDTO

ðŸ”¹ DELETE /api/printingcost/device-mappings/{id}
    Elimina printingcost por el ID.

ðŸ”¹ GET /api/printingcost/devices/{deviceId}/applicable-configurations
    Consulta todos los printingcosts.
    â€¢ Usa DTO: List<PrintingCostConfigDTO

ðŸ”¹ POST /api/printingcost/estimate
    Crea un nuevo printingcost.
    â€¢ Usa DTO: CostEstimationResultDTO

ðŸ”¹ POST /api/printingcost/devices/{deviceId}/estimation-scenarios
    Crea un nuevo printingcost.
    â€¢ Usa DTO: List<CostEstimationResultDTO


=============================================================
ðŸ“˜ PrintingSecurityController â€“ /api/printingsecurity
=============================================================
Gestiona printingsecuritys del sistema.
ðŸ”¹ GET /api/printingsecurity/roles
    Consulta todos los printingsecuritys.
    â€¢ Usa DTO: List<PrintingRoleDTO

ðŸ”¹ GET /api/printingsecurity/roles/{roleId}
    Consulta todos los printingsecuritys.
    â€¢ Usa DTO: PrintingRoleDTO

ðŸ”¹ POST /api/printingsecurity/roles
    Crea un nuevo printingsecurity.
    â€¢ Usa DTO: PrintingRoleCreateDTO

ðŸ”¹ PUT /api/printingsecurity/roles/{roleId}
    Actualiza printingsecuritys.
    â€¢ Usa DTO: PrintingRoleCreateDTO

ðŸ”¹ DELETE /api/printingsecurity/roles/{roleId}
    Elimina printingsecuritys.

ðŸ”¹ GET /api/printingsecurity/permissions
    Consulta todos los printingsecuritys.
    â€¢ Usa DTO: List<PrintingPermissionDTO

ðŸ”¹ GET /api/printingsecurity/permissions/category/{category}
    Consulta todos los printingsecuritys.
    â€¢ Usa DTO: List<PrintingPermissionDTO

ðŸ”¹ POST /api/printingsecurity/permissions
    Crea un nuevo printingsecurity.
    â€¢ Usa DTO: PrintingPermissionCreateDTO

ðŸ”¹ PUT /api/printingsecurity/permissions/{permissionId}
    Actualiza printingsecuritys.
    â€¢ Usa DTO: PrintingPermissionCreateDTO

ðŸ”¹ GET /api/printingsecurity/users/{userId}/roles
    Consulta todos los printingsecuritys.
    â€¢ Usa DTO: List<UserPrintingRoleDTO

ðŸ”¹ POST /api/printingsecurity/users/roles
    Crea un nuevo printingsecurity.
    â€¢ Usa DTO: UserPrintingRoleCreateDTO

ðŸ”¹ DELETE /api/printingsecurity/users/roles/{userRoleId}
    Elimina printingsecuritys.

ðŸ”¹ GET /api/printingsecurity/roles/{roleId}/users
    Consulta todos los printingsecuritys.
    â€¢ Usa DTO: List<UserPrintingRoleDTO

ðŸ”¹ GET /api/printingsecurity/users/{userId}/permission-overrides
    Consulta todos los printingsecuritys.
    â€¢ Usa DTO: List<UserPermissionOverrideDTO

ðŸ”¹ POST /api/printingsecurity/users/permission-overrides
    Crea un nuevo printingsecurity.
    â€¢ Usa DTO: UserPermissionOverrideCreateDTO

ðŸ”¹ DELETE /api/printingsecurity/users/permission-overrides/{overrideId}
    Elimina printingsecuritys.

ðŸ”¹ POST /api/printingsecurity/check-permission
    Crea un nuevo printingsecurity.
    â€¢ Usa DTO: PermissionCheckDTO

ðŸ”¹ POST /api/printingsecurity/users/{userId}/check-permissions
    Crea un nuevo printingsecurity.

ðŸ”¹ GET /api/printingsecurity/users/{userId}/effective-permissions
    Consulta todos los printingsecuritys.

ðŸ”¹ GET /api/printingsecurity/users/{userId}/resource-permission
    Consulta todos los printingsecuritys.

ðŸ”¹ POST /api/printingsecurity/activities
    Crea un nuevo printingsecurity.
    â€¢ Usa DTO: PermissionActivityFilterDTO

ðŸ”¹ GET /api/printingsecurity/activities/suspicious
    Consulta todos los printingsecuritys.
    â€¢ Usa DTO: List<PermissionActivityDTO

ðŸ”¹ GET /api/printingsecurity/policies
    Consulta todos los printingsecuritys.
    â€¢ Usa DTO: List<SecurityPolicyDTO

ðŸ”¹ GET /api/printingsecurity/policies/category/{category}
    Consulta todos los printingsecuritys.
    â€¢ Usa DTO: List<SecurityPolicyDTO

ðŸ”¹ POST /api/printingsecurity/policies
    Crea un nuevo printingsecurity.
    â€¢ Usa DTO: SecurityPolicyCreateDTO

ðŸ”¹ PUT /api/printingsecurity/policies/{policyId}
    Actualiza printingsecuritys.
    â€¢ Usa DTO: SecurityPolicyCreateDTO

ðŸ”¹ PATCH /api/printingsecurity/policies/{policyId}/toggle
    Actualiza parcialmente printingsecuritys.

ðŸ”¹ GET /api/printingsecurity/dashboard
    Consulta todos los printingsecuritys.
    â€¢ Usa DTO: PermissionsDashboardDTO

ðŸ”¹ GET /api/printingsecurity/stats/roles
    Consulta todos los printingsecuritys.
    â€¢ Usa DTO: List<RoleUsageStatsDTO

ðŸ”¹ GET /api/printingsecurity/stats/permissions
    Consulta todos los printingsecuritys.
    â€¢ Usa DTO: List<PermissionUsageStatsDTO

ðŸ”¹ GET /api/printingsecurity/stats/violations
    Consulta todos los printingsecuritys.
    â€¢ Usa DTO: List<SecurityViolationStatsDTO

ðŸ”¹ GET /api/printingsecurity/stats/users
    Consulta todos los printingsecuritys.
    â€¢ Usa DTO: List<UserAccessStatsDTO

ðŸ”¹ POST /api/printingsecurity/initialize
    Crea un nuevo printingsecurity.

ðŸ”¹ GET /api/printingsecurity/validate
    Consulta todos los printingsecuritys.

ðŸ”¹ POST /api/printingsecurity/cleanup
    Crea un nuevo printingsecurity.

ðŸ”¹ POST /api/printingsecurity/sync-audit
    Crea un nuevo printingsecurity.


=============================================================
ðŸ“˜ TemplatesController â€“ /api/templates
=============================================================
Gestiona templates del sistema.
ðŸ”¹ GET /api/templates
    Consulta todos los templates.
    â€¢ Usa DTO: IEnumerable<LabelTemplateDTO

ðŸ”¹ GET /api/templates/{id}
    Consulta templates por el ID.
    â€¢ Usa DTO: LabelTemplateDetailDTO

ðŸ”¹ POST /api/templates
    Crea un nuevo templates.
    â€¢ Usa DTO: LabelTemplateCreateDTO

ðŸ”¹ POST /api/templates/{id}/render
    AcciÃ³n especial sobre el templates por el ID.

ðŸ”¹ GET /api/templates/categories
    Consulta todos los templates.


=============================================================
ðŸ“˜ TraceabilityHooksController â€“ /api/traceabilityhooks
=============================================================
Gestiona traceabilityhooks del sistema.
ðŸ”¹ GET /api/traceabilityhooks/auto-print-status
    Consulta todos los traceabilityhooks.

ðŸ”¹ POST /api/traceabilityhooks/configure-auto-print
    Crea un nuevo traceabilityhooks.

ðŸ”¹ GET /api/traceabilityhooks/auto-templates/{operationType}/{action}
    Consulta todos los traceabilityhooks.

ðŸ”¹ POST /api/traceabilityhooks/trigger-manual
    Crea un nuevo traceabilityhooks.

ðŸ”¹ GET /api/traceabilityhooks/statistics
    Consulta todos los traceabilityhooks.

ðŸ”¹ GET /api/traceabilityhooks/events-history
    Consulta todos los traceabilityhooks.


